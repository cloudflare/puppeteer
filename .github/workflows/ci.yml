name: CI

# Declare default permissions as read only.
permissions: read-all

on:
  push:
    branches:
      - main
  pull_request:
    types:
      # These are the defaults. See
      # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
      - opened
      - reopened
      - synchronize

      # Used for `full-ci`
      - labeled
    branches:
      - '**'

concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  inspect-code:
    name: '[Required] Inspect code'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2
      - name: Set up Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          cache: npm
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      # Set up GitHub Actions caching for Wireit.
      - uses: google/wireit@eea3c9f0385a39e6eb4ff6a6daa273311381d436 # setup-github-actions-caching/v2.0.2
      - name: Check code
        run: npm run check
      - name: Validate licenses
        run: npm run validate-licenses
      - name: Build every package
        run: npm run build
      - name: Tests types
        run: npm run test-types
      - name: Lint code
        run: npm run lint
      - name: Validate licenses
        run: npm run validate-licenses
      - name: Build every package
        run: npm run build

  check-changes:
    uses: ./.github/workflows/changed-packages.yml
    with:
      check-mergeable-state: true

  chrome-tests:
    name: ${{ matrix.suite }} (${{ matrix.shard }}) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    strategy:
      fail-fast: false
      matrix:
        linux-only:
          - ${{ github.event_name == 'pull_request' && !contains(github.head_ref, 'release-please') && !contains(github.event.pull_request.labels.*.name, 'full-ci') }}
        suite:
          - chrome-headless
          - chrome-headful
          - chrome-headless-shell
        os:
          - ubuntu-22.04
          - windows-latest
          - macos-13
        shard:
          - 1-2
          - 2-2
        exclude:
          - linux-only: true
            os: windows-latest
          - linux-only: true
            os: macos-13
          - linux-only: true
            suite: chrome-headful

          - os: macos-13
            suite: chrome-headful
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          cache: npm
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      # Set up GitHub Actions caching for Wireit.
      - uses: google/wireit@eea3c9f0385a39e6eb4ff6a6daa273311381d436 # setup-github-actions-caching/v2.0.2
      - name: Build packages
        run: npm run build --workspace @puppeteer-test/test
      - name: Setup cache for Chrome binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/puppeteer/chrome
          key: Chrome-${{ runner.os }}-${{ hashFiles('packages/puppeteer-core/src/revisions.ts') }}-${{ hashFiles('packages/puppeteer/src/node/install.ts') }}
      - name: Install Chrome
        run: npm run postinstall
      - name: Run all tests (for non-Linux)
        if: ${{ matrix.os != 'ubuntu-22.04' }}
        run: npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
        env:
          PUPPETEER_EXECUTABLE_PATH: ${{ steps.browser.outputs.executablePath }}
      - name: Run all tests (for Linux)
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: xvfb-run --auto-servernum npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
        env:
          PUPPETEER_EXECUTABLE_PATH: ${{ steps.browser.outputs.executablePath }}
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.suite }}-${{ matrix.shard }}
          path: /tmp/artifacts/*.json

  chrome-tests-required:
    name: '[Required] Chrome tests'
    needs: [check-changes, chrome-tests]
    runs-on: ubuntu-22.04
    if: ${{ always() }}
    steps:
      - if: ${{ needs.chrome-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
        run: 'exit 1'
      - run: 'exit 0'

  firefox-tests:
    name: ${{ matrix.suite }} (${{ matrix.shard }}) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    strategy:
      fail-fast: false
      matrix:
        linux-only:
          - ${{ github.event_name == 'pull_request' && !contains(github.head_ref, 'release-please') && !contains(github.event.pull_request.labels.*.name, 'full-ci') }}
        suite:
          - firefox-headful
          - firefox-headless
        os:
          - ubuntu-22.04
          - macos-13
          - windows-latest
        shard:
          - 1-4
          - 2-4
          - 3-4
          - 4-4
        exclude:
          - linux-only: true
            os: windows-latest
          - linux-only: true
            os: macos-13

          - os: macos-13
            suite: firefox-headful
          - os: macos-13
            suite: firefox-headless
          - os: windows-latest
            suite: firefox-headful
          - os: windows-latest
            suite: firefox-headless
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          cache: npm
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      # Set up GitHub Actions caching for Wireit.
      - uses: google/wireit@eea3c9f0385a39e6eb4ff6a6daa273311381d436 # setup-github-actions-caching/v2.0.2
      - name: Build packages
        run: npm run build --workspace @puppeteer-test/test
      - name: Setup cache for Firefox binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/puppeteer/firefox
          key: Firefox-${{ runner.os }}-${{ hashFiles('packages/puppeteer-core/src/revisions.ts') }}-${{ hashFiles('packages/puppeteer/src/node/install.ts') }}
      - name: Install Firefox
        env:
          PUPPETEER_PRODUCT: firefox
        run: npm run postinstall
      - name: Run all tests (for non-Linux)
        if: ${{ matrix.os != 'ubuntu-22.04' }}
        run: npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
      - name: Run all tests (for Linux)
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: xvfb-run --auto-servernum npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.suite }}-${{ matrix.shard }}
          path: /tmp/artifacts/*.json

  firefox-tests-required:
    name: '[Required] Firefox tests'
    needs: [check-changes, firefox-tests]
    runs-on: ubuntu-22.04
    if: ${{ always() }}
    steps:
      - if: ${{ needs.firefox-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
        run: 'exit 1'
      - run: 'exit 0'

  unit-tests:
    name: '[Required] Puppeteer Unit tests'
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          cache: npm
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      - name: Run unit tests
        run: |
          npm run unit -w puppeteer-core -w puppeteer --if-present

  workers-tests:
    name: '[Required] Workers tests'
    runs-on: ubuntu-latest
    needs: check-changes
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          cache: npm
          node-version: lts/*
      - name: Install dependencies
        run: npm i
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      - name: Run worker tests
        run: |
          cd ./test-workers
          npm run build
          npx wrangler deploy --compatibility-date $(date '+%Y-%m-%d')
          npm run test
